#!/bin/sh

function __clear_preview() {
  if [ -n "$KITTY_WINDOW_ID" ]; then
    kitty icat --clear --stdin=no --transfer-mode=memory
  fi
}

function __view_text() {
  __clear_preview
  bat --color=always --style=numbers --line-range=:500 "$1"
}

function __view_pdf() {
  if ! command -v pdftocairo > /dev/null ; then
    return 1
  fi

  dim="${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}"
  if [ $dim = "x" ]; then
    dim=$(stty size | tr " " "x")
  fi

  conv="pdftocairo -q -singlefile -scale-to 300 -png"
  if [ -n "$KITTY_WINDOW_ID" ]; then
    $conv "$1" - | kitty icat --clear --unicode-placeholder \
      --transfer-mode=memory --stdin=yes --place="$dim@0x0" && return
  elif command -v chafa > /dev/null ; then
    $conv "$1" - | chafa -s "$dim" && return
  fi

  return 1
}

function __view_image() {
  dim="${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}"
  if [ $dim = "x" ]; then
    dim=$(stty size | tr " " "x")
  fi

  if [ -n "$KITTY_WINDOW_ID" ]; then
    kitty icat --clear --unicode-placeholder --transfer-mode=memory \
      --stdin=no --place="$dim@0x0" "$1" && return
  elif command -v chafa > /dev/null ; then
    chafa -s "$dim" "$1" && return
  fi

  return 1
}

function __view_file_info() {
  __clear_preview
  file --brief "$1"
}

function __view_thumbnail() {
  T=$([ -n "$THUMBNAILER" ]  && "$THUMBNAILER" "$1")

  if [ -n "$T" ] && [ -f "$T" ]; then
    __view_image "$T" && return
  fi

  return 1
}

function __dispatch_preview() {
  if [ ! -e "$1" ]; then
    echo "File or directory not found"
    exit 127
  fi

  TYPE=$(file --brief --dereference --mime "$1")

  case "$TYPE" in
    inode/directory* )
      tree -C "$1"
      ;;
    text/* | application/json* | application/javascript* )
      __view_text "$1"
      ;;
    image/* )
      __view_image "$1" || __view_file_info "$1"
      ;;
    application/pdf* )
      __view_thumbnail "$1" ||  __view_pdf "$1" || __view_file_info "$1"
      ;;
    * )
      __view_thumbnail "$1" || __view_file_info "$1"
  esac
}

function __integrate_bash() {
  cat <<- "FUNC"
    function ffd() {
      fd "$@" | fzf --preview 'fzf-plus --preview {}' \
        --preview-window 'right,border-left,hidden,<50(up,30%,border-bottom,hidden)' \
        --reverse --height=50% --border top --border \
        --bind "ctrl-/:toggle-preview" \
        --bind "ctrl-o:execute-silent(printf '%s\0' {+} | xargs -n1 -0 ${OPENER:-xdg-open})" \
        --bind "alt-o:become(${EDITOR:-vim} {+})" \
        --bind "alt-<:first" --bind "alt->:last" --multi
    }
FUNC
}

case "$1" in
  "--preview" ) __dispatch_preview "$2" ;;
  "--bash" ) __integrate_bash ;;
  * )
    cmd=$(basename $0)
    echo "Usage: $cmd --preview <filename>"
    echo "       $cmd --bash"
esac
